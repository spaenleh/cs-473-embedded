library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity tb_adder_sequential is
end tb_adder_sequential;

architecture test of tb_adder_sequential is

	constant CLK_PERIOD : time := 100 ns;

	-- generic constants
	constant N_BITS : positive range 2 to positive'right := 4;

	-- adder_cobinational PORTS
	signal CLK : std_logic;
	signal RST : std_logic;
	signal START : std_logic;
	signal OP1 : std_logic_vector(N_BITS - 1 downto 0);
	signal OP2 : std_logic_vector(N_BITS - 1 downto 0);
	signal SUM : std_logic_vector(N_BITS downto 0);
	signal DONE : std_logic;

begin

	-- Instantiate DUT
	dut : entity work.adder_sequential
	generic map(N_BIT => N_BITS)
	port map(
		CLK => CLK,
		RST => RST,
		START => START,
		OP1 => OP1,
		OP2 => OP2,
		SUM => SUM,
		DONE => DONE
	);

	clk_gen : process
	begin
		CLK <= '1';
		wait for CLK_PERIOD / 2;
		CLK <= '0';
		wait for CLK_PERIOD / 2;
	end process clk_gen;


end architecture test;
